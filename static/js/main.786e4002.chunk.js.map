{"version":3,"sources":["images/memoji.jpg","components/Card.js","content/index.js","components/Header.js","components/Navbar.js","components/Stack.js","components/Work.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","useState","isAnimated","setIsAnimated","useEffect","className","src","profile","alt","target","href","class","nav","logo","links","text","to","header","img","typical","btnText","stack","title","tech","desc","Header","animated","setAnimated","style","background","id","content","steps","loop","Infinity","Navbar","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","Stack","map","index","Work","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.786e4002.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memoji.71d3655f.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport profile from '../images/memoji.jpg'\r\nimport {FaEnvelope, FaGithub, FaLinkedin} from 'react-icons/fa'\r\n\r\nfunction Card()\r\n{\r\n    const [isAnimated,setIsAnimated] = useState(false);\r\n    useEffect(() => {\r\n        setIsAnimated(true);\r\n    }, [])\r\n    return (\r\n        <div className={`${isAnimated ? \"scale-150\" : \"translate-x-full translate-y-full\"} w-full transform transition duration-1000 ease-in-out`}>\r\n            <div className='flex-auto flex-col justify-center max-w-xs mx-auto bg-white shadow-xl rounded-xl p-5 drop'>\r\n                <div className= ''>\r\n                    <img className='w-32 mx-auto shadow-xl rounded-full drop-shadow-sm' src={profile} alt='memoji'/>\r\n\r\n                </div>\r\n\r\n                <div className='text-center mt-5'>\r\n                    <p className='text-xl sm:2xl text-gray-900'>\r\n                            Aaron Auld\r\n                        </p>\r\n\r\n                        <p className='text-xs sm:text-base text-gray-600 pt-2 pb-4 px-5 w-auto inline-block border-b-2'>\r\n                            blah\r\n                        </p>\r\n\r\n                    \r\n                        <div className='flex align-center justify-center mt-4'>\r\n\r\n\r\n                            <a target=\"_blank\" className='text-xl m-1 p-1 sm:m-2 sm:p-2 text-gray-800 hover:bg-gray-800 rounded-full hover:text-white transition-colors duration-300' href=\"https://github.com/aaronauld\">\r\n                                <FaGithub />\r\n                                <span class = 'sr-only'>Github</span>\r\n                            </a>\r\n\r\n                            <a target=\"_blank\" className='text-xl m-1 p-1 sm:m-2 sm:p-2 text-gray-800 hover:bg-gray-800 rounded-full hover:text-white transition-colors duration-300' href=\"https://www.linkedin.com/in/aa2000/\">\r\n                                <FaLinkedin />\r\n                                <span class = 'sr-only'>LinkedIn</span>\r\n                            </a>\r\n\r\n                            <a target=\"_blank\" className='text-xl m-1 p-1 sm:m-2 sm:p-2 text-gray-800 hover:bg-gray-800 rounded-full hover:text-white transition-colors duration-300' href=\"https://github.com/aaronauld\">\r\n                                <FaEnvelope />\r\n                                <span class = 'sr-only'>Gmail</span>\r\n                            </a>\r\n\r\n                        </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","export default {\r\n  nav: {\r\n    logo: 'CC',\r\n    links: [\r\n      { text: 'Work', to: 'mywork' },\r\n      { text: 'Contact', to: 'mycontact' },\r\n    ],\r\n  },\r\n  header: {\r\n    img:\r\n      'https://images.unsplash.com/photo-1555952517-2e8e729e0b44?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1300&q=80',\r\n    text: ['Hi!', \"It's me Aaron.\", 'I am a'],\r\n    typical: [\r\n      'Web Developer. ðŸ–¥',\r\n      2000,\r\n      'Computer Science Student.',\r\n      2000,\r\n      'Software Engineer.',\r\n      2000,\r\n    ],\r\n    btnText: ['Discover Work', 'Discover Stacks']\r\n  },\r\n\r\n  stack: {\r\n    title: 'Stack',\r\n    tech: [\r\n      {\r\n        img: process.env.PUBLIC_URL + '/assets/mongo.png',\r\n        alt: 'mongodb',\r\n      },\r\n      {\r\n        img: process.env.PUBLIC_URL + '/assets/express.png',\r\n        alt: 'express',\r\n      },\r\n      {\r\n        img: process.env.PUBLIC_URL + '/logo512.png',\r\n        alt: 'react',\r\n      },\r\n      {\r\n        img: process.env.PUBLIC_URL + '/assets/node.png',\r\n        alt: 'node',\r\n      },\r\n      {\r\n        img: process.env.PUBLIC_URL + '/assets/postgres.png',\r\n        alt: 'postgres',\r\n      },\r\n      {\r\n        img: process.env.PUBLIC_URL + '/assets/tailwind.png',\r\n        alt: 'tailwind',\r\n      },\r\n      {\r\n        img: process.env.PUBLIC_URL + '/assets/python.png',\r\n        alt: 'python',\r\n      },\r\n    ],\r\n    desc: `The above stacks have been used throughout my numerous projects as outlined on Github. The stacks I use in order are MongoDb, Express, React, NodeJS, Tailwind, PostgeSQL and Python.`,\r\n  },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { Link as ScrollLink } from 'react-scroll';\r\nimport Typical from 'react-typical';\r\nimport Card from './Card';\r\nimport content from '../content';\r\n\r\nexport default function Header() {\r\n  const [animated, setAnimated] = useState(false);\r\n  useEffect(() => {\r\n    setAnimated(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center min-h-screen mx-auto\" style={{background: '#eae7dc',}} id='header'>\r\n      <section className='container'>\r\n        <div className=\"w-9/12 mx-auto flex flex-col md:flex-row-reverse items-center justify-between \">\r\n          <div className=\"w-full md:w-6/12 sm: p-8\">\r\n            <Card />\r\n          </div>\r\n          <div className=\"text-black font-dosis text-center md:text-left\">\r\n            <h2\r\n              className={`${\r\n                animated ? '' : 'translate-y-10 opacity-0'\r\n              }  transform transition duration-2000 ease-in-out font-bold text-11xl md:text-3xl`}\r\n            >\r\n              {content.header.text[0]}\r\n              <br />\r\n              {content.header.text[1]}\r\n            </h2>\r\n            <h1\r\n              className={`${\r\n                animated ? '' : 'translate-y-10 opacity-0 sm:hidden'\r\n              }  transform transition duration-2000 ease-in-out font-bold text-gray-700 text-2xl md:text-lg`}\r\n            >\r\n              {content.header.text[2]}{' '}\r\n              <Typical\r\n                steps={content.header.typical}\r\n                loop={Infinity}\r\n                className=\"inline-block\"\r\n              />\r\n            </h1>\r\n            <ScrollLink to=\"work\">\r\n              <button className=\" animate-float bg-indigo-500 px-10 py-3 text-xl uppercase mt-10 rounded-lg text-white\">\r\n                {content.header.btnText[0]}\r\n              </button>\r\n            </ScrollLink>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n          <div style={{background: '#eae7dc',}} className='max-w-7xl mx-auto ml-auto text-black fixed inset-x-0 z-50'>\r\n              <div className='relative flex justify-between items-center'>\r\n                <a href='#' class=\"ml-6 hover:text-gray-600 duration-300\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\r\n                    </svg>\r\n                </a>\r\n\r\n                <div className='flex space-x-9 px-4'>\r\n                    <a href='#work' class=\"py-5 px-3 m-4 font-bold hover:text-gray-600 duration-300\">\r\n                        Projects\r\n                    </a>\r\n                    \r\n                    <a href='#stack' class=\"py-5 px-3 m-4 font-bold hover:text-gray-600 duration-300\">\r\n                        Stacks\r\n                    </a>\r\n                </div>\r\n              </div>\r\n          </div>\r\n    );\r\n  }","import React from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport content from '../content';\r\n\r\nexport default function Stack() {\r\n  return (\r\n    <div\r\n      className=\"min-h-screen flex flex-col items-center justify-center font-dosis\"\r\n      id=\"stack\"\r\n      style={{background: '#eae7dc',}}\r\n    >\r\n      <h1 className=\"text-5xl font-bold\">Stacks I use</h1>\r\n      <div className=\"flex flex-wrap justify-center mt-10\">\r\n        {content.stack.tech.map((tech, index) => {\r\n          return (\r\n            <span\r\n              className={`${\r\n                index % 2 === 0 ? ' animate-float' : ' animate-refloat'\r\n              } w-40 h-40 bg-white shadow-2xl m-2 rounded-full flex items-center p-5 `}\r\n            >\r\n              <LazyLoadImage src={tech.img} alt={tech.alt} />\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <p className=\"w-11/12 md:max-w-xl text-xl text-center mt-10\">\r\n        {content.stack.desc}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link as ScrollLink } from 'react-scroll';\r\nimport content from '../content';\r\n\r\nexport default function Work() {\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center min-h-screen mx-auto md:px-14 lg:px-24 w-full\"\r\n    id=\"work\" style={{background: '#eae7dc',}}>\r\n      <section className='container'>\r\n        <h2 className='text-5xl text-center font-bold font-dosis p-7'>\r\n          My Work\r\n        </h2>\r\n        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6 items-center text-center'>\r\n          <a className='flex-col m-6' target='blank' href='https://github.com/aaronauld'>\r\n            <img className='object-fill m-5 shadow-xl rounded-xl' src='/assets/knn.png' />\r\n            <text className='font-dosis'>Building a full stack meditation tracking project utilising the MERN stack</text>\r\n          </a>\r\n          <a className='flex-col m-6' target='blank' href='https://github.com/aaronauld'>\r\n            <img className='m-5 shadow-xl rounded-xl' src='/assets/knn.png' />\r\n            <text className='font-dosis'>Classifying the presence of diabetes from scratch using analytics</text>\r\n          </a>\r\n          <a className='flex-col m-6' target='blank' href='https://github.com/aaronauld'>\r\n            <img className='m-5 shadow-xl rounded-xl' src='/assets/web2.png' />\r\n            <text className='font-dosis'>Using React and Tailwind to create an adaptive personal portfolio website</text>\r\n          </a>\r\n        </div>\r\n      </section>\r\n      <ScrollLink to=\"stack\">\r\n        <button className=\" animate-float bg-indigo-500 px-10 py-3 text-xl uppercase mt-10 rounded-lg text-white\">\r\n        {content.header.btnText[1]}\r\n        </button>\r\n      </ScrollLink>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Header from './components/Header';\r\nimport Navbar from './components/Navbar';\r\nimport Stack from './components/Stack';\r\nimport Work from './components/Work';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Header />\r\n      <Work />\r\n      <Stack />     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/main.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}